{"version":3,"sources":["config/env.js","analytics.js","containers/IntlProvider.js","higher-order/withIntl.js","components/Icon.js","components/ContactSent.js","components/loader.js","components/image.js","components/Map.js","components/menu/FlagMenu.js","components/menu/Menu.js","components/menu/index.js","components/social/SocialItem.js","components/social/SocialList.js","components/social/index.js","components/inputs/Input.js","components/inputs/Text.js","components/inputs/TextArea.js","components/forms/ContactForm.js","api/exceptions/contact-exception.js","api/contact.js","actions/contact.js","i18n/index.js","i18n/lang-en.js","i18n/lang-pt-BR.js","actions/i18n.js","containers/App.js","containers/Contact.js","containers/Home.js","containers/Main.js","containers/Root.js","reducers/i18n.js","reducers/send-contact.js","reducers/index.js","store/configureStore.js","registerServiceWorker.js","index.js"],"names":["env","environment","process","apiService","url","API_SERVICE_URL","google","analyticsId","GOOGLE_ANALYTICS_ID","map","center","lat","parseFloat","MAP_CENTER_LATITUDE","lng","MAP_CENTER_LONGITUDE","ReactGA","initialize","analytics","location","set","page","pageview","connect","state","Object","objectSpread","i18n","IntlProvider","withIntlHOC","WrappedComponent","injectIntl","props","react_default","a","createElement","Icon","_ref","icon","size","name","withIntl","intl","className","Card","style","minWidth","Content","Header","formatMessage","id","Meta","Icon_Icon","Description","extra","alt","src","href","target","rel","Loader","compose","withState","withHandlers","onLoad","_ref2","toggleLoading","isLoading","imageClass","classNames","hidden","loader","Map","_ref$zoom","zoom","zoomControl","TileLayer","attribution","Marker","position","items","flag","locale","FlagMenu","value","onChange","Dropdown","item","trigger","FlagMenu_FlagIcon","Menu","index","Item","key","active","onClick","border","textAlign","FlagIcon","concat","onLocaleChange","menuItems","to","pointing","secondary","NavLink","exact","SocialItem","data-content","SocialList","withProps","social_SocialItem","_","data","mapProps","_ref3","Component","block","hasError","type","rest","objectWithoutProperties","Form","Input","error","fluid","react","TextArea","defaultValidation","email","message","subject","validation","forms_ContactForm","contact","onPropChange","formData","setFormData","defineProperty","onSubmit","_ref4","setValidation","forEach","input","isSubmiting","emailAddress","Group","widths","Text","label","placeholder","required","Message","header","content","index_es","defaultMessage","tagName","values","Button","loading","ContactException","classCallCheck","this","SAFE_LENGTH","_callee","payload","body","response","regenerator_default","wrap","_context","prev","next","keys","filter","length","fetch","method","headers","Content-Type","JSON","stringify","sent","json","status_code","error_message","statusText","stop","api_contact","sendContact","bind","undefined","SEND_CONTACT_REQUEST","SEND_CONTACT_SUCCESS","SEND_CONTACT_FAILURE","RESET_CONTACT_FORM","resetContactForm","sendContactForm","asyncToGenerator","mark","dispatch","t0","_x","apply","arguments","addLocaleData","toConsumableArray","enLocaleData","ptBRLocaleData","src_i18n","en","messages","application.name","application.copy","mersocarlin.title","mersocarlin.email","mersocarlin.gravatarUrl","menu.home","menu.contact","contact.title","contact.feedback.header","contact.feedback.message1","contact.feedback.message2","contact.feedback.message3","contact.form.errorHeader","contact.form.errorMessage","contact.form.bigMessage","contact.form.name.label","contact.form.name.placeholder","contact.form.email.label","contact.form.email.placeholder","contact.form.subject.label","contact.form.subject.placeholder","contact.form.message.label","contact.form.validation.label","contact.form.send","pt-BR","UPDATE_LOCALE","updateLocale","locales","I18nActionCreators","children","menu","moment","year","containers_Contact","ContactActionCreators","lifecycle","componentWillUnmount","as","marginBottom","contactSent","margin","components_ContactSent","Map_Map","options","fullscreenControl","social","components_image","Main","containers_App","Switch","Route","path","component","Contact","Home","Redirect","getPathName","routing","pathname","componentDidMount","logPageView","componentWillReceiveProps","currentLocation","nextLocation","history","store","es","react_router_redux_es","INITIAL_STATE","rootReducer","combineReducers","action","configureStore","preloadedState","composeEnhancers","middlewares","routerMiddleware","thunk","createStore","reducers","applyMiddleware","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","pushState","createBrowserHistory","createHashHistory","ReactDOM","render","containers_Root","document","getElementById","URL","origin","addEventListener","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"wwBAAeA,EAAA,CACbC,YAAaC,aACbC,WAAY,CACVC,IACEF,8CAAYG,iBAAmB,0CAEnCC,OAAQ,CACNC,YAAaL,8CAAYM,qBAAuB,iBAElDC,IAAK,CACHC,OAAQ,CACNC,IAAKC,WAAWV,8CAAYW,qBAAuB,aACnDC,IAAKF,WAAWV,8CAAYa,sBAAwB,gBCR1DC,IAAQC,WAAWjB,EAAIM,OAAOC,aAEf,IAAAW,EAAA,SAASC,GACE,gBAApBnB,EAAIC,cAIRe,IAAQI,IAAI,CAAEC,KAAMF,IACpBH,IAAQM,SAASH,qBCTJI,cAAQ,SAAAC,GAAK,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GAAUD,EAAMG,OAA7BJ,CAAsCK,2DCAtC,SAASC,EAAYC,GAGlC,OAAOC,YAFU,SAAAC,GAAK,OAAIC,EAAAC,EAAAC,cAACL,EAAqBE,kBCKnC,SAASI,EAATC,GAAyC,IAAzBC,EAAyBD,EAAzBC,KAAMC,EAAmBF,EAAnBE,KACnC,OAAON,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcI,KAAMF,EAAMC,KAAMA,ICyC1BE,QAtCf,SAAAJ,GAAuC,IAAhBK,EAAgBL,EAAhBK,KACrB,OACET,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,0DACbV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,MAAO,CAAEC,SAAU,MACvBb,EAAAC,EAAAC,cAACS,EAAA,EAAKG,QAAN,KACEd,EAAAC,EAAAC,cAACS,EAAA,EAAKI,OAAN,KACGN,EAAKO,cAAc,CAAEC,GAAI,6BAE5BjB,EAAAC,EAAAC,cAACS,EAAA,EAAKO,KAAN,KACGT,EAAKO,cAAc,CAAEC,GAAI,8BAC1BjB,EAAAC,EAAAC,cAACiB,EAAD,CAAMd,KAAK,UAEbL,EAAAC,EAAAC,cAACS,EAAA,EAAKS,YAAN,KACEpB,EAAAC,EAAAC,cAAA,SAAIO,EAAKO,cAAc,CAAEC,GAAI,+BAC7BjB,EAAAC,EAAAC,cAAA,SAAIO,EAAKO,cAAc,CAAEC,GAAI,iCAGjCjB,EAAAC,EAAAC,cAACS,EAAA,EAAKG,QAAN,CAAcO,OAAK,GACjBrB,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,qBACdV,EAAAC,EAAAC,cAAA,OACEoB,IAAI,GACJZ,UAAU,kBACVa,IAAKd,EAAKO,cAAc,CAAEC,GAAI,8BAEhCjB,EAAAC,EAAAC,cAAA,KACEsB,KAAK,kCACLC,OAAO,SACPC,IAAI,uBAHN,sCCjCGC,EAFA,kBAAM3B,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,sCC4BrBkB,cACbC,YAAU,YAAa,iBAAiB,GACxCC,YAAa,CACXC,OAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,cAAH,OAA+B,kBAAMA,GAAc,OAHhDL,CAbD,SAAAxB,GAAwC,IAArC8B,EAAqC9B,EAArC8B,UAAWX,EAA0BnB,EAA1BmB,IAAKQ,EAAqB3B,EAArB2B,OACzBI,EAAaC,IAAW,2CAA4C,CACxEC,OAAQH,IAGV,OACElC,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,mBACZwB,GAAalC,EAAAC,EAAAC,cAACoC,EAAD,MACdtC,EAAAC,EAAAC,cAAA,OAAKoB,IAAI,GAAGZ,UAAWyB,EAAYZ,IAAKA,EAAKQ,OAAQA,kCCd5C,SAASQ,EAATnC,GAA4C,IAA7B3B,EAA6B2B,EAA7B3B,OAA6B+D,EAAApC,EAArBqC,YAAqB,IAAAD,EAAd,GAAcA,EACzD,OACExC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CACE9D,OAAQ,CAACA,EAAOC,IAAKD,EAAOI,KAC5B4D,KAAMA,EACNC,YAAa,MAEb1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CACEC,YAAY,0EACZzE,IAAI,mGAEN6B,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAQC,SAAU,CAACrE,EAAOC,IAAKD,EAAOI,uCClBtCkE,EAAQ,CAAC,CAAEC,KAAM,KAAMC,OAAQ,SAAW,CAAED,KAAM,KAAMC,OAAQ,OAOvD,SAASC,EAAT9C,GAA+C,IAA3B+C,EAA2B/C,EAA3B+C,MAAOC,EAAoBhD,EAApBgD,SACxC,OACEpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAUC,MAAI,EAACC,QAASvD,EAAAC,EAAAC,cAACsD,EAAD,CAAUR,KAAMG,KACtCnD,EAAAC,EAAAC,cAACmD,EAAA,EAASI,KAAV,KACGV,EAAMvE,IAAI,SAAC8E,EAAMI,GAAP,OACT1D,EAAAC,EAAAC,cAACmD,EAAA,EAASM,KAAV,CACEC,IAAKF,EACLG,OAAQP,EAAKN,OAASG,EACtBW,QAAS,kBAAMV,EAASE,EAAKL,SAC7BrC,MAAO,CAAEmD,OAAQ,OAAQC,UAAW,WAEpChE,EAAAC,EAAAC,cAACsD,EAAD,CAAUR,KAAMM,EAAKN,YAQjC,IAAMiB,EAAW,SAAAjC,GAAA,IAAGgB,EAAHhB,EAAGgB,KAAH,OAAchD,EAAAC,EAAAC,cAAA,KAAGQ,UAAS,QAAAwD,OAAUlB,MCuBtCxC,ICnDAiD,EDmDAjD,EAnCf,SAAAJ,GAAwD,IAAxCK,EAAwCL,EAAxCK,KAAMwC,EAAkC7C,EAAlC6C,OAAQkB,EAA0B/D,EAA1B+D,eACtBC,EAAY,CAChB,CACE7D,KAAME,EAAKO,cAAc,CAAEC,GAAI,cAC/BZ,KAAM,OACNgE,GAAI,KAEN,CACE9D,KAAME,EAAKO,cAAc,CAAEC,GAAI,iBAC/BZ,KAAM,OACNgE,GAAI,aAIR,OACErE,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAca,UAAQ,EAACC,WAAS,GAC9BvE,EAAAC,EAAAC,cAACuD,EAAA,EAAaA,KAAd,CAAmBX,SAAS,SACzBsB,EAAU5F,IAAI,SAAC8E,EAAMI,GAAP,OACb1D,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CACEZ,IAAKF,EACLe,MAAmB,MAAZnB,EAAKe,GACZ3D,UAAU,OACV2D,GAAIf,EAAKe,IAETrE,EAAAC,EAAAC,cAACiB,EAAD,CAAMd,KAAMiD,EAAKjD,OAChBiD,EAAK/C,QAIVP,EAAAC,EAAAC,cAACgD,EAAD,CAAUC,MAAOF,EAAQG,SAAUe,QExB5BO,EAZI,SAAAtE,GAAA,IAAGkD,EAAHlD,EAAGkD,KAAH,OACjBtD,EAAAC,EAAAC,cAAA,KACEyE,eAAcrB,EAAKnF,IACnBuC,UAAS,2BAAAwD,OAA6BZ,EAAK5C,WAAa4C,EAAKjD,MAC7DmB,KAAM8B,EAAKnF,IACXsD,OAAO,SACPC,IAAI,uBAEJ1B,EAAAC,EAAAC,cAACiB,EAAD,CAAMd,KAAMiD,EAAKjD,SCCNuB,IClBAgD,EDkBAhD,YACbiD,YAAU,iBAAO,CACf9B,MAAO,CACL,CACE1C,KAAM,WACNE,KAAM,WACNpC,IAAK,8CAEP,CACEkC,KAAM,SACNE,KAAM,SACNpC,IAAK,kCAEP,CACEuC,UAAW,SACXL,KAAM,iBACNE,KAAM,gBACNpC,IAAK,uDAEP,CACEuC,UAAW,cACXL,KAAM,OACNE,KAAM,QACNpC,IAAK,sCAEP,CACEkC,KAAM,UACNE,KAAM,UACNpC,IAAK,uCA5BEyD,CARf,SAAAxB,GAAuC,IAAjB2C,EAAiB3C,EAAjB2C,MACpB,OACE/C,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,eACZqC,EAAMvE,IAAI,SAAC8E,EAAMI,GAAP,OAAiB1D,EAAAC,EAAAC,cAAC4E,EAAD,CAAYlB,IAAKF,EAAOJ,KAAMA,4CEKjD1B,mBACbE,YAAa,CACXsB,SAAU,SAAApB,GAAA,IAAGzB,EAAHyB,EAAGzB,KAAM6C,EAATpB,EAASoB,SAAT,OAAmC,SAAC2B,EAAQC,GAC/C5B,GAILA,EAAS7C,EAAMyE,EAAK7B,WAGxB8B,YAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAWC,EAAdF,EAAcE,MAAOC,EAArBH,EAAqBG,SAAUC,EAA/BJ,EAA+BI,KAAMnC,EAArC+B,EAAqC/B,MAAUoC,EAA/C/F,OAAAgG,EAAA,EAAAhG,CAAA0F,EAAA,wDAAA1F,OAAAC,EAAA,EAAAD,CAAA,CACP2F,UAAWA,GAAaM,IAAKC,MAC7BC,MAAON,EACPO,MAAOR,EACPE,KAAMA,GAAQ,OACdnC,MAAOA,GAAS,IACboC,KAhBQ3D,CAJf,SAAAxB,GAAuC,IAAtB+E,EAAsB/E,EAAtB+E,UAAcI,EAAQ/F,OAAAgG,EAAA,EAAAhG,CAAAY,EAAA,eACrC,OAAOyF,EAAA,cAACV,EAAcI,KCXT3D,eACbqD,YAAS,SAAAlF,GAAK,OAAAP,OAAAC,EAAA,EAAAD,CAAA,CACZ2F,UAAWM,IAAKC,OACb3F,KAHQ6B,CAKb8D,ICLa9D,eACbqD,YAAS,SAAAlF,GAAK,OAAAP,OAAAC,EAAA,EAAAD,CAAA,CACZ2F,UAAWM,IAAKK,UACb/F,KAHQ6B,CAKb8D,ICoIF,IAAMK,GAAoB,CACxBC,OAAO,EACPC,SAAS,EACT1F,MAAM,EACN2F,SAAS,EACTC,YAAY,GAGdC,GAAexE,YACbpB,EACAqB,YAAU,WAAY,cAAe,SAAAG,GAAA,IAAGqE,EAAHrE,EAAGqE,QAAH,OAAA7G,OAAAC,EAAA,EAAAD,CAAA,CACnCwG,MAAO,GACPC,QAAS,GACT1F,KAAM,GACN2F,QAAS,GACTC,WAAY,IACTE,KAELxE,YAAU,aAAc,gBAAiBkE,IACzCjE,YAAa,CACXwE,aAAc,SAAApB,GAAA,IAAGqB,EAAHrB,EAAGqB,SAAUC,EAAbtB,EAAasB,YAAb,OAA+B,SAC3CjG,EACA4C,GAF2C,OAI3CqD,EAAYhH,OAAAC,EAAA,EAAAD,CAAA,GACP+G,EADM/G,OAAAiH,EAAA,EAAAjH,CAAA,GAERe,EAAO4C,OAEZuD,SAAU,SAAAC,GAAA,IAAGJ,EAAHI,EAAGJ,SAAUG,EAAbC,EAAaD,SAAUE,EAAvBD,EAAuBC,cAAeT,EAAtCQ,EAAsCR,WAAtC,OAAuD,WAC/D,IAEId,EAFe,CAAC,OAAQ,QAAS,UAAW,UAAW,cAGhDwB,QAAQ,SAAAC,GACZzB,GAAakB,EAASO,KACzBzB,GAAW,EACXuB,EAAcpH,OAAAC,EAAA,EAAAD,CAAA,GACTuG,GADQvG,OAAAiH,EAAA,EAAAjH,CAAA,GAEVsH,GAAQ,QAKXzB,IAIwB,MAAxBkB,EAASJ,YASbS,EAAcb,IAEdW,EAASH,IAVPK,EAAcpH,OAAAC,EAAA,EAAAD,CAAA,GACT2G,EADQ,CAEXA,YAAY,UAzCtB,CA9GA,SAAA/F,GAQW,IAPTuF,EAOSvF,EAPTuF,MACAY,EAMSnG,EANTmG,SACA9F,EAKSL,EALTK,KACAsG,EAIS3G,EAJT2G,YACAT,EAGSlG,EAHTkG,aACAI,EAEStG,EAFTsG,SACAP,EACS/F,EADT+F,WAEMa,EAAevG,EAAKO,cAAc,CAAEC,GAAI,sBAE9C,OACEjB,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CAAME,QAASA,GACb3F,EAAAC,EAAAC,cAACuF,EAAA,EAAKwB,MAAN,CAAYC,OAAO,SACjBlH,EAAAC,EAAAC,cAACiH,GAAD,CACE9B,SAAUc,EAAW5F,KACrB6G,MAAO3G,EAAKO,cAAc,CAAEC,GAAI,4BAChCV,KAAK,OACL6C,SAAUkD,EACVe,YAAa5G,EAAKO,cAAc,CAC9BC,GAAI,kCAENqG,UAAQ,EACRnE,MAAOoD,EAAShG,OAElBP,EAAAC,EAAAC,cAACiH,GAAD,CACE9B,SAAUc,EAAWH,MACrBoB,MAAO3G,EAAKO,cAAc,CAAEC,GAAI,6BAChCV,KAAK,QACL6C,SAAUkD,EACVe,YAAa5G,EAAKO,cAAc,CAC9BC,GAAI,mCAENqG,UAAQ,EACRhC,KAAK,QACLnC,MAAOoD,EAASP,SAIpBhG,EAAAC,EAAAC,cAACiH,GAAD,CACE9B,SAAUc,EAAWD,QACrBkB,MAAO3G,EAAKO,cAAc,CAAEC,GAAI,+BAChCV,KAAK,UACL6C,SAAUkD,EACVe,YAAa5G,EAAKO,cAAc,CAC9BC,GAAI,qCAENqG,UAAQ,EACRnE,MAAOoD,EAASL,UAGlBlG,EAAAC,EAAAC,cAAC4F,GAAD,CACET,SAAUc,EAAWF,QACrBmB,MAAO3G,EAAKO,cAAc,CAAEC,GAAI,+BAChCV,KAAK,UACL6C,SAAUkD,EACVgB,UAAQ,EACRnE,MAAOoD,EAASN,UAGlBjG,EAAAC,EAAAC,cAACiH,GAAD,CACE9B,SAAUc,EAAWA,WACrBiB,MAAO3G,EAAKO,cAAc,CAAEC,GAAI,kCAChCV,KAAK,aACL6C,SAAUkD,EACVgB,UAAQ,EACRnE,MAAOoD,EAASJ,aAGjBR,GACC3F,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CACE5B,OAAK,EACL6B,OAAQ/G,EAAKO,cAAc,CAAEC,GAAI,6BACjCZ,KAAK,eACLoH,QACEzH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CACEzG,GAAI0E,EAAMM,SAAW,4BACrB0B,eAAgBhC,EAAMM,SAAW,GACjC2B,QAAQ,IACRC,OAAQ,CACN7B,MACEhG,EAAAC,EAAAC,cAAA,KACEsB,KAAI,UAAA0C,OAAY8C,GAChBvF,OAAO,SACPC,IAAI,uBAEHsF,QASfhH,EAAAC,EAAAC,cAACuF,EAAA,EAAKqC,OAAN,CAAaC,QAAShB,EAAajD,QAAS4C,GACzCjG,EAAKO,cAAc,CAAEC,GAAI,kEClInB+G,GANb,SAAAA,EAAY/B,GAAUzG,OAAAyI,GAAA,EAAAzI,CAAA0I,KAAAF,GACpBE,KAAKjC,QAAUA,EACfiC,KAAK3H,KAAO,oBCAV4H,GAAc,mDAEpB,SAAAC,EAA2BC,GAA3B,IAAAC,EAAAC,EAAAvD,EAAA,OAAAwD,GAAAvI,EAAAwI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACQN,EAAO,CACX/H,KAAM8H,EAAQ9H,KACdyF,MAAOqC,EAAQrC,MACfE,QAASmC,EAAQnC,QACjBuB,QAASY,EAAQpC,WAIjBzG,OAAOqJ,KAAKP,GAAMQ,OAAO,SAAAlF,GAAG,OAAI0E,EAAK1E,GAAKmF,OAASZ,KAAaY,OAAS,GAT7E,CAAAL,EAAAE,KAAA,cAYU,IAAIZ,GAAiB,2BAZ/B,cAAAU,EAAAE,KAAA,EAgByBI,MAAK,GAAA9E,OAAInG,EAAIG,WAAWC,IAAnB,gBAAsC,CAChE8K,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBb,KAAMc,KAAKC,UAAUf,KArBzB,cAgBQC,EAhBRG,EAAAY,KAAAZ,EAAAE,KAAA,EAwBqBL,EAASgB,OAxB9B,YAwBQvE,EAxBR0D,EAAAY,MA0BWE,YA1BX,CAAAd,EAAAE,KAAA,eA2BU,IAAIZ,GAAiBhD,EAAKyE,eAAiBlB,EAASmB,YA3B9D,yBAAAhB,EAAAiB,SAAAvB,EAAAF,gCA+Be,IAAA0B,GAAA,CACbC,yDAAyBC,UAAKC,ICnCnBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAqB,qBAE3B,SAASC,KACd,MAAO,CAAE9E,KAAM6E,IAGV,SAASE,GAAgBhC,GAC9B,sBAAAjI,EAAAZ,OAAA8K,GAAA,EAAA9K,CAAAgJ,GAAAvI,EAAAsK,KAAO,SAAAnC,EAAMoC,GAAN,OAAAhC,GAAAvI,EAAAwI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACL4B,EAAS,CAAElF,KAAM0E,KADZtB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGGvC,GAAQwD,YAAYxB,GAHvB,OAIHmC,EAAS,CAAElF,KAAM2E,GAAsBjF,MAAM,IAJ1C0D,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA+B,GAAA/B,EAAA,SAMH8B,EAAS,CAAElF,KAAM4E,GAAsBvE,MAAK+C,EAAA+B,KANzC,yBAAA/B,EAAAiB,SAAAvB,EAAAF,KAAA,YAAP,gBAAAwC,GAAA,OAAAtK,EAAAuK,MAAAzC,KAAA0C,YAAA,2DCLFC,YAAcrL,OAAAsL,GAAA,EAAAtL,CAAIuL,MAAL7G,OAAA1E,OAAAsL,GAAA,EAAAtL,CAAsBwL,QAEpB,IAAAC,GAAA,CACbC,GAAI,CACFlI,KAAM,KACNC,OAAQ,KACRkI,SCbW,CACbC,mBAAoB,cACpBC,mBAAoB,wCAEpBC,oBAAqB,oBACrBC,oBAAqB,8BACrBC,0BACE,yEAEFC,YAAa,OACbC,eAAgB,UAEhBC,gBAAiB,UACjBC,0BAA2B,2BAC3BC,4BAA6B,qCAC7BC,4BACE,sGACFC,4BAA6B,gBAE7BC,2BAA4B,6BAC5BC,4BACE,8JACFC,0BACE,gJACFC,0BAA2B,OAC3BC,gCAAiC,YACjCC,2BAA4B,SAC5BC,iCAAkC,kBAClCC,6BAA8B,UAC9BC,mCAAoC,UACpCC,6BAA8B,UAC9BC,gCAAiC,SACjCC,oBAAqB,SDjBrBC,QAAS,CACP5J,KAAM,KACNC,OAAQ,QACRkI,SElBW,CACbC,mBAAoB,cACpBC,mBAAoB,iDAEpBC,oBAAqB,yBACrBC,oBAAqB,8BACrBC,0BACE,yEAEFC,YAAa,OACbC,eAAgB,UAEhBC,gBAAiB,UACjBC,0BAA2B,6BAC3BC,4BAA6B,iCAC7BC,4BAA6B,oDAC7BC,4BAA6B,kBAE7BC,2BAA4B,0BAC5BC,4BACE,yKACFC,0BACE,qJACFC,0BAA2B,OAC3BC,gCAAiC,WACjCC,2BAA4B,SAC5BC,iCAAkC,sBAClCC,6BAA8B,UAC9BC,mCAAoC,UACpCC,6BAA8B,WAC9BC,gCAAiC,SACjCC,oBAAqB,YC7BVE,GAAgB,gBAEtB,SAASC,GAAa7J,GAC3B,MAAO,CACLqC,KAAMuH,GACN7H,KAAKxF,OAAAC,EAAA,EAAAD,CAAA,GAAMuN,GAAQ9J,YC6BRrB,mBACbpB,EACAlB,YACE,SAAAC,GAAK,MAAK,CACRG,KAAMH,EAAMG,OAEd,CACEoN,aAAcE,EAAmBF,eAGrChL,YAAa,CACXqC,eAAgB,SAAAnC,GAAA,IAAG8K,EAAH9K,EAAG8K,aAAH,OAAsB,SAAA7J,GAAM,OAAI6J,EAAa7J,OAXlDrB,CAff,SAAAxB,GAA+D,IAAhD6M,EAAgD7M,EAAhD6M,SAAUvN,EAAsCU,EAAtCV,KAAMe,EAAgCL,EAAhCK,KAAM0D,EAA0B/D,EAA1B+D,eACnC,OACEnE,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,mBACbV,EAAAC,EAAAC,cAACgN,EAAD,CAAMjK,OAAQvD,EAAKsD,KAAMmB,eAAgBA,IAEzCnE,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,oBAAoBuM,GAEnCjN,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,uBACbV,EAAAC,EAAAC,cAACiB,EAAD,CAAMd,KAAK,cACV8M,MAASC,OAFZ,IAEqB3M,EAAKO,cAAc,CAAEC,GAAI,mCCyBpDoM,GAAezL,YACbpB,EACAlB,YACE,SAAAC,GAAK,MAAK,CACRsK,YAAatK,EAAMsK,cAErB,CACEO,iBAAkBkD,EAAsBlD,iBACxCC,gBAAiBiD,EAAsBjD,kBAG3CxF,YAAU,CACRpG,OAAQV,EAAIS,IAAIC,SAElBqD,YAAa,CACX4E,SAAU,SAAA1E,GAAA,IAAGqI,EAAHrI,EAAGqI,gBAAH,OAAyB,SAAAhC,GAAO,OAAIgC,EAAgBhC,OAEhEkF,YAAU,CACRC,qBADQ,WAENtF,KAAKnI,MAAMqK,sBAnBjB,CApCgB,SAAAhK,GAAqD,IAAlD3B,EAAkD2B,EAAlD3B,OAAQgC,EAA0CL,EAA1CK,KAAMiG,EAAoCtG,EAApCsG,SAAUmD,EAA0BzJ,EAA1ByJ,YACzC,OACE7J,EAAAC,EAAAC,cAAC2F,EAAA,SAAD,KACE7F,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,qBACbV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,UACbV,EAAAC,EAAAC,cAACa,GAAA,EAAD,CAAQ0M,GAAG,KAAK7M,MAAO,CAAE8M,aAAc,QACpCjN,EAAKO,cAAc,CAAEC,GAAI,oBAI7B4I,EAAY8D,YACX3N,EAAAC,EAAAC,cAAA,OAAKU,MAAO,CAAEgN,OAAQ,UACpB5N,EAAAC,EAAAC,cAAC2N,EAAD,OAGF7N,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,SAASE,MAAO,CAAE8M,aAAc,QAC7C1N,EAAAC,EAAAC,cAACkG,GAAD,CACET,MAAOkE,EAAYlE,MACnBoB,YAAa8C,EAAY9C,YACzBL,SAAUA,MAKlB1G,EAAAC,EAAAC,cAAC4N,EAAD,CACErP,OAAQA,EACRsP,QAAS,CAAEC,mBAAmB,EAAOtL,aAAa,KAGpD1C,EAAAC,EAAAC,cAAA,OAAKU,MAAO,CAAEgN,OAAQ,QAAS5J,UAAW,WACxChE,EAAAC,EAAAC,cAAC+N,EAAD,iBCjBOzN,SAnBf,SAAAJ,GAAgC,IAAhBK,EAAgBL,EAAhBK,KACd,OACET,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,aACbV,EAAAC,EAAAC,cAACgO,EAAD,CAAO3M,IAAKd,EAAKO,cAAc,CAAEC,GAAI,8BACrCjB,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,UACXD,EAAKO,cAAc,CAAEC,GAAI,sBAE5BjB,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,+BACbV,EAAAC,EAAAC,cAAA,UACGO,EAAKO,cAAc,CAAEC,GAAI,sBAC1BjB,EAAAC,EAAAC,cAACiB,EAAD,CAAMd,KAAK,WAIfL,EAAAC,EAAAC,cAAC+N,EAAD,SCnBS,SAASE,KACtB,OACEnO,EAAAC,EAAAC,cAACkO,GAAD,KACEpO,EAAAC,EAAAC,cAACmO,EAAA,EAAD,KACErO,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAOC,KAAK,WAAWC,UAAWC,KAClCzO,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAO7J,OAAK,EAAC8J,KAAK,IAAIC,UAAWE,KAEjC1O,EAAAC,EAAAC,cAACyO,EAAA,EAAD,CAAUtK,GAAG,QCYrB,IAAMuK,GAAc,SAAAC,GAAO,OACzBA,EAAQ3P,SAAW2P,EAAQ3P,SAAS4P,SAAW,KAElClN,eACbtC,YAAQ,SAAAC,GAAK,MAAK,CAChBsP,QAAStP,EAAMsP,WAEjBtB,YAAU,CACRwB,kBADQ,WAENC,EAAY,MAEdC,0BAJQ,SAAAjN,GAI+B,IAAX6M,EAAW7M,EAAX6M,QACpBK,EAAkBN,GAAY1G,KAAKnI,MAAM8O,SACzCM,EAAeP,GAAYC,GAE7BK,IAAoBC,GACtBH,EAAYG,MAbLvN,CAff,SAAAxB,GAA0C,IAA1BgP,EAA0BhP,EAA1BgP,QAASC,EAAiBjP,EAAjBiP,MACvB,OACErP,EAAAC,EAAAC,cAACoP,EAAA,EAAD,CAAUD,MAAOA,GACfrP,EAAAC,EAAAC,cAACP,EAAD,KACEK,EAAAC,EAAAC,cAACqP,EAAA,EAAD,CAAiBH,QAASA,GACxBpP,EAAAC,EAAAC,cAACiO,GAAD,8BCjBJqB,GAAahQ,OAAAC,EAAA,EAAAD,CAAA,GAAQuN,GAAQ7B,ICD7BsE,GAAgB,CACpB7B,aAAa,EACbhI,MAAO,KACPoB,aAAa,GCOA0I,GANKC,aAAgB,CAClChQ,KFFa,WAAmC,IAAlCH,EAAkCqL,UAAA7B,OAAA,QAAAgB,IAAAa,UAAA,GAAAA,UAAA,GAA1B4E,GAAeG,EAAW/E,UAAA7B,OAAA,EAAA6B,UAAA,QAAAb,EAChD,OAAQ4F,EAAOrK,MACb,KAAK0H,EAAmBH,cACtB,OAAK8C,EAAO3K,KAAKmG,SAIbwE,EAAO3K,KAAK/B,SAAW1D,EAAM0D,OACxB1D,EAGFC,OAAAC,EAAA,EAAAD,CAAA,GACFD,EACAoQ,EAAO3K,MATHzF,EAWX,QACE,OAAOA,IEbXsK,YDAa,WAAmC,IAAlCtK,EAAkCqL,UAAA7B,OAAA,QAAAgB,IAAAa,UAAA,GAAAA,UAAA,GAA1B4E,GAAeG,EAAW/E,UAAA7B,OAAA,EAAA6B,UAAA,QAAAb,EAChD,OAAQ4F,EAAOrK,MACb,KAAKgI,EAAsBtD,qBACzB,OAAOxK,OAAAC,EAAA,EAAAD,CAAA,GACFD,EADL,CAEEoO,aAAa,EACbhI,MAAO,KACPoB,aAAa,IAEjB,KAAKuG,EAAsBrD,qBACzB,OAAOzK,OAAAC,EAAA,EAAAD,CAAA,GACFD,EADL,CAEEwH,aAAa,EACb4G,YAAagC,EAAO3K,OAExB,KAAKsI,EAAsBpD,qBACzB,OAAO1K,OAAAC,EAAA,EAAAD,CAAA,GACFD,EADL,CAEEwH,aAAa,EACbpB,MAAOgK,EAAOhK,QAElB,KAAK2H,EAAsBnD,mBACzB,OAAO3K,OAAAC,EAAA,EAAAD,CAAA,GACFgQ,IAEP,QACE,OAAOjQ,ICzBXsP,cCeae,GAlBQ,SAACR,GAAiC,IAAxBS,EAAwBjF,UAAA7B,OAAA,QAAAgB,IAAAa,UAAA,GAAAA,UAAA,GAAP,GAC1CkF,EAEAlO,KAIAmO,EAAc,CADUC,YAAiBZ,GACHa,MAQ5C,OANcC,aACZC,GACAN,EACAC,EAAiBM,KAAezF,WAAf,EAAmBoF,MCRlCM,GAAcC,QACW,cAA7BC,OAAOrR,SAASsR,UAEe,UAA7BD,OAAOrR,SAASsR,UAEhBD,OAAOrR,SAASsR,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3R,QACfqR,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAA7L,GACL2L,QAAQ3L,MAAM,4CAA6CA,uBCnE3DyJ,GAAUmB,OAAOnB,QAAQqC,UAC3BC,MACAC,MACEtC,GAAQO,GAAeR,IAE7BwC,IAASC,OACP7R,EAAAC,EAAAC,cAAC4R,GAAD,CAAM1C,QAASA,GAASC,MAAOA,KAC/B0C,SAASC,eAAe,SDCX,WACb,GAA6C,kBAAmBpB,UAAW,CAGzE,GADkB,IAAIqB,IAAIhU,GAAwBsS,OAAOrR,UAC3CgT,SAAW3B,OAAOrR,SAASgT,OAIvC,OAGF3B,OAAO4B,iBAAiB,OAAQ,WAC9B,IAAMxB,EAAK,GAAAzM,OAAMjG,GAAN,sBAEPoS,IAiDV,SAAiCM,GAE/B3H,MAAM2H,GACHI,KAAK,SAAAxI,GAGkB,MAApBA,EAAS6J,SACuD,IAAhE7J,EAASW,QAAQmJ,IAAI,gBAAgBC,QAAQ,cAG7C1B,UAAUC,cAAc0B,MAAMxB,KAAK,SAAAC,GACjCA,EAAawB,aAAazB,KAAK,WAC7BR,OAAOrR,SAASuT,aAKpB/B,GAAgBC,KAGnBa,MAAM,WACLF,QAAQC,IACN,mEArEAmB,CAAwB/B,GAIxBC,UAAUC,cAAc0B,MAAMxB,KAAK,WACjCO,QAAQC,IACN,+GAMJb,GAAgBC,MC1BxBgC","file":"static/js/main.1a4390ca.chunk.js","sourcesContent":["export default {\n  environment: process.env.NODE_ENV,\n  apiService: {\n    url:\n      process.env.API_SERVICE_URL || 'https://mersocarlin-api.herokuapp.com/',\n  },\n  google: {\n    analyticsId: process.env.GOOGLE_ANALYTICS_ID || 'UA-17163651-1',\n  },\n  map: {\n    center: {\n      lat: parseFloat(process.env.MAP_CENTER_LATITUDE || '53.350140'),\n      lng: parseFloat(process.env.MAP_CENTER_LONGITUDE || '-6.266155'),\n    },\n  },\n}\n","import ReactGA from 'react-ga'\n\nimport { env } from './config'\n\nReactGA.initialize(env.google.analyticsId)\n\nexport default function(location) {\n  if (env.environment === 'development') {\n    return\n  }\n\n  ReactGA.set({ page: location })\n  ReactGA.pageview(location)\n}\n","import { connect } from 'react-redux'\nimport { IntlProvider } from 'react-intl'\n\nexport default connect(state => ({ ...state.i18n }))(IntlProvider)\n","import React from 'react'\nimport { injectIntl } from 'react-intl'\n\nexport default function withIntlHOC(WrappedComponent) {\n  const withIntl = props => <WrappedComponent {...props} />\n\n  return injectIntl(withIntl)\n}\n","// @flow\nimport React from 'react'\nimport { Icon as SemanticIcon } from 'semantic-ui-react'\n\ntype ApiPropsT = {\n  icon: string,\n  size?: string,\n}\n\nexport default function Icon({ icon, size }: ApiPropsT) {\n  return <SemanticIcon name={icon} size={size} />\n}\n","// @flow\nimport React from 'react'\nimport { Card } from 'semantic-ui-react'\n\nimport { withIntl } from '../higher-order'\nimport Icon from './Icon'\n\nimport type { IntlT } from '../types'\n\ntype PropsT = {\n  intl: IntlT,\n}\n\nfunction ContactSent({ intl }: PropsT) {\n  return (\n    <div className=\"ui column centered grid contact-sent bounceIn animated\">\n      <Card style={{ minWidth: 300 }}>\n        <Card.Content>\n          <Card.Header>\n            {intl.formatMessage({ id: 'contact.feedback.header' })}\n          </Card.Header>\n          <Card.Meta>\n            {intl.formatMessage({ id: 'contact.feedback.message1' })}\n            <Icon icon=\"send\" />\n          </Card.Meta>\n          <Card.Description>\n            <p>{intl.formatMessage({ id: 'contact.feedback.message2' })}</p>\n            <p>{intl.formatMessage({ id: 'contact.feedback.message3' })}</p>\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <span className=\"left floated like\">\n            <img\n              alt=\"\"\n              className=\"ui avatar image\"\n              src={intl.formatMessage({ id: 'mersocarlin.gravatarUrl' })}\n            />\n            <a\n              href=\"https://twitter.com/mersocarlin\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              @mersocarlin\n            </a>\n          </span>\n        </Card.Content>\n      </Card>\n    </div>\n  )\n}\n\nexport default withIntl(ContactSent)\n","import React from 'react'\n\nconst Loader = () => <div className=\"ui active centered inline loader\" />\n\nexport default Loader\n","// @flow\nimport React from 'react'\nimport { compose, withHandlers, withState } from 'recompose'\nimport classNames from 'classnames'\n\nimport Loader from './loader'\n\ntype InnerPropsT = {\n  isLoading: boolean,\n  onLoad: () => void,\n  toggleLoading: (loading: boolean) => void,\n}\n\ntype PropsT = {\n  src: string,\n} & InnerPropsT\n\nconst Image = ({ isLoading, src, onLoad }: PropsT) => {\n  const imageClass = classNames('ui medium circular image fadeIn animated', {\n    hidden: isLoading,\n  })\n\n  return (\n    <div className=\"image-component\">\n      {isLoading && <Loader />}\n      <img alt=\"\" className={imageClass} src={src} onLoad={onLoad} />\n    </div>\n  )\n}\n\nexport default compose(\n  withState('isLoading', 'toggleLoading', true),\n  withHandlers({\n    onLoad: ({ toggleLoading }: PropsT) => () => toggleLoading(false),\n  })\n)(Image)\n","// @flow\nimport React from 'react'\nimport { Map as LeafletMap, TileLayer, Marker } from 'react-leaflet'\n\nimport type { MapCenterT } from '../types'\n\ntype PropsT = {\n  center: MapCenterT,\n  zoom?: number,\n}\n\nexport default function Map({ center, zoom = 12 }: PropsT) {\n  return (\n    <LeafletMap\n      center={[center.lat, center.lng]}\n      zoom={zoom}\n      zoomControl={null}\n    >\n      <TileLayer\n        attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n        url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}\"\n      />\n      <Marker position={[center.lat, center.lng]} />\n    </LeafletMap>\n  )\n}\n","// @flow\nimport React from 'react'\nimport { Dropdown } from 'semantic-ui-react'\n\nconst items = [{ flag: 'br', locale: 'pt-BR' }, { flag: 'gb', locale: 'en' }]\n\ntype PropsT = {\n  value: string,\n  onChange: (locale: string) => void,\n}\n\nexport default function FlagMenu({ value, onChange }: PropsT) {\n  return (\n    <Dropdown item trigger={<FlagIcon flag={value} />}>\n      <Dropdown.Menu>\n        {items.map((item, index) => (\n          <Dropdown.Item\n            key={index}\n            active={item.flag === value}\n            onClick={() => onChange(item.locale)}\n            style={{ border: 'none', textAlign: 'center' }}\n          >\n            <FlagIcon flag={item.flag} />\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  )\n}\n\nconst FlagIcon = ({ flag }) => <i className={`flag ${flag}`} />\n","// @flow\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Menu as SemanticMenu } from 'semantic-ui-react'\n\nimport { withIntl } from '../../higher-order'\nimport { Icon } from '../index'\nimport FlagMenu from './FlagMenu'\n\nimport type { IntlT } from '../../types'\n\ntype PropsT = {\n  intl: IntlT,\n  locale: string,\n  onClick: (path: string) => void,\n  onLocaleChange: (locale: string) => void,\n}\n\nfunction Menu({ intl, locale, onLocaleChange }: PropsT) {\n  const menuItems = [\n    {\n      name: intl.formatMessage({ id: 'menu.home' }),\n      icon: 'home',\n      to: '/',\n    },\n    {\n      name: intl.formatMessage({ id: 'menu.contact' }),\n      icon: 'mail',\n      to: '/contact',\n    },\n  ]\n\n  return (\n    <SemanticMenu pointing secondary>\n      <SemanticMenu.Menu position=\"right\">\n        {menuItems.map((item, index) => (\n          <NavLink\n            key={index}\n            exact={item.to === '/'}\n            className=\"item\"\n            to={item.to}\n          >\n            <Icon icon={item.icon} />\n            {item.name}\n          </NavLink>\n        ))}\n\n        <FlagMenu value={locale} onChange={onLocaleChange} />\n      </SemanticMenu.Menu>\n    </SemanticMenu>\n  )\n}\n\nexport default withIntl(Menu)\n","import Menu from './Menu'\n\nexport default Menu\n","// @flow\nimport React from 'react'\n\nimport { Icon } from '../index'\n\nimport type { SocialItemT } from '../../types'\n\ntype PropsT = {\n  item: SocialItemT,\n}\n\nconst SocialItem = ({ item }: PropsT) => (\n  <a\n    data-content={item.url}\n    className={`ui circular icon button ${item.className || item.icon}`}\n    href={item.url}\n    target=\"_blank\"\n    rel=\"noopener noreferrer\"\n  >\n    <Icon icon={item.icon} />\n  </a>\n)\n\nexport default SocialItem\n","// @flow\nimport React from 'react'\nimport { compose, withProps } from 'recompose'\n\nimport SocialItem from './SocialItem'\n\nimport type { SocialItemT } from '../../types'\n\ntype PropsT = {\n  items: Array<SocialItemT>,\n}\n\nfunction SocialList({ items }: PropsT) {\n  return (\n    <div className=\"social-list\">\n      {items.map((item, index) => <SocialItem key={index} item={item} />)}\n    </div>\n  )\n}\n\nexport default compose(\n  withProps(() => ({\n    items: [\n      {\n        icon: 'linkedin',\n        name: 'LinkedIn',\n        url: 'https://www.linkedin.com/in/mersocarlin/en',\n      },\n      {\n        icon: 'github',\n        name: 'Github',\n        url: 'https://github.com/mersocarlin',\n      },\n      {\n        className: 'orange',\n        icon: 'stack overflow',\n        name: 'StackOverflow',\n        url: 'https://stackoverflow.com/users/1461131/mersocarlin',\n      },\n      {\n        className: 'google plus',\n        icon: 'mail',\n        name: 'Email',\n        url: 'mailto:mersocarlin@mersocarlin.com',\n      },\n      {\n        icon: 'twitter',\n        name: 'Twitter',\n        url: 'https://twitter.com/mersocarlin',\n      },\n    ],\n  }))\n)(SocialList)\n","import SocialList from './SocialList'\n\nexport default SocialList\n","// @flow\nimport * as React from 'react'\nimport { compose, mapProps, withHandlers } from 'recompose'\nimport { Form } from 'semantic-ui-react'\n\ntype ApiPropsT = {\n  block?: boolean,\n  Component: React.Node,\n  hasError?: boolean,\n  name: string,\n  onChange?: (name: string, value: string) => void,\n  placeholder?: string,\n  required?: boolean,\n  type?: string,\n}\n\nfunction Input({ Component, ...rest }) {\n  return <Component {...rest} />\n}\n\nexport default compose(\n  withHandlers({\n    onChange: ({ name, onChange }: ApiPropsT) => (_: any, data: any) => {\n      if (!onChange) {\n        return\n      }\n\n      onChange(name, data.value)\n    },\n  }),\n  mapProps(({ Component, block, hasError, type, value, ...rest }) => ({\n    Component: Component || Form.Input,\n    error: hasError,\n    fluid: block,\n    type: type || 'text',\n    value: value || '',\n    ...rest,\n  }))\n)(Input)\n","// @flow\nimport { compose, mapProps } from 'recompose'\nimport { Form } from 'semantic-ui-react'\n\nimport Input from './Input'\n\nexport default compose(\n  mapProps(props => ({\n    Component: Form.Input,\n    ...props,\n  }))\n)(Input)\n","// @flow\nimport { compose, mapProps } from 'recompose'\nimport { Form } from 'semantic-ui-react'\n\nimport Input from './Input'\n\nexport default compose(\n  mapProps(props => ({\n    Component: Form.TextArea,\n    ...props,\n  }))\n)(Input)\n","// @flow\nimport React from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { compose, withHandlers, withState } from 'recompose'\nimport { Form, Message } from 'semantic-ui-react'\n\nimport { withIntl } from '../../higher-order'\nimport { Text, TextArea } from '../inputs'\n\nimport type { IntlT } from '../../types'\n\ntype ContactT = {\n  email: string,\n  message: string,\n  name: string,\n  subject: string,\n  validation: string,\n}\n\ntype ContactValidationT = {\n  email: boolean,\n  message: boolean,\n  name: boolean,\n  subject: boolean,\n  validation: boolean,\n}\n\ntype ApiPropsT = {\n  contact?: ContactT,\n  error?: any,\n  isSubmiting: boolean,\n  onSubmit: (contact: ContactT) => void,\n}\n\ntype PropsT = {\n  formData: ContactT,\n  intl: IntlT,\n  onPropChange: (name: string, value: string) => void,\n  validation: ContactValidationT,\n} & ApiPropsT\n\nfunction ContactForm({\n  error,\n  formData,\n  intl,\n  isSubmiting,\n  onPropChange,\n  onSubmit,\n  validation,\n}: PropsT) {\n  const emailAddress = intl.formatMessage({ id: 'mersocarlin.email' })\n\n  return (\n    <Form error={!!error}>\n      <Form.Group widths=\"equal\">\n        <Text\n          hasError={validation.name}\n          label={intl.formatMessage({ id: 'contact.form.name.label' })}\n          name=\"name\"\n          onChange={onPropChange}\n          placeholder={intl.formatMessage({\n            id: 'contact.form.name.placeholder',\n          })}\n          required\n          value={formData.name}\n        />\n        <Text\n          hasError={validation.email}\n          label={intl.formatMessage({ id: 'contact.form.email.label' })}\n          name=\"email\"\n          onChange={onPropChange}\n          placeholder={intl.formatMessage({\n            id: 'contact.form.email.placeholder',\n          })}\n          required\n          type=\"email\"\n          value={formData.email}\n        />\n      </Form.Group>\n\n      <Text\n        hasError={validation.subject}\n        label={intl.formatMessage({ id: 'contact.form.subject.label' })}\n        name=\"subject\"\n        onChange={onPropChange}\n        placeholder={intl.formatMessage({\n          id: 'contact.form.subject.placeholder',\n        })}\n        required\n        value={formData.subject}\n      />\n\n      <TextArea\n        hasError={validation.message}\n        label={intl.formatMessage({ id: 'contact.form.message.label' })}\n        name=\"message\"\n        onChange={onPropChange}\n        required\n        value={formData.message}\n      />\n\n      <Text\n        hasError={validation.validation}\n        label={intl.formatMessage({ id: 'contact.form.validation.label' })}\n        name=\"validation\"\n        onChange={onPropChange}\n        required\n        value={formData.validation}\n      />\n\n      {error && (\n        <Message\n          error\n          header={intl.formatMessage({ id: 'contact.form.errorHeader' })}\n          icon=\"warning sign\"\n          content={\n            <FormattedMessage\n              id={error.message || 'contact.form.errorMessage'}\n              defaultMessage={error.message || ''}\n              tagName=\"p\"\n              values={{\n                email: (\n                  <a\n                    href={`mailto:${emailAddress}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {emailAddress}\n                  </a>\n                ),\n              }}\n            />\n          }\n        />\n      )}\n\n      <Form.Button loading={isSubmiting} onClick={onSubmit}>\n        {intl.formatMessage({ id: 'contact.form.send' })}\n      </Form.Button>\n    </Form>\n  )\n}\n\nconst defaultValidation = {\n  email: false,\n  message: false,\n  name: false,\n  subject: false,\n  validation: false,\n}\n\nexport default compose(\n  withIntl,\n  withState('formData', 'setFormData', ({ contact }) => ({\n    email: '',\n    message: '',\n    name: '',\n    subject: '',\n    validation: '',\n    ...contact,\n  })),\n  withState('validation', 'setValidation', defaultValidation),\n  withHandlers({\n    onPropChange: ({ formData, setFormData }) => (\n      name: string,\n      value: string\n    ) =>\n      setFormData({\n        ...formData,\n        [name]: value,\n      }),\n    onSubmit: ({ formData, onSubmit, setValidation, validation }) => () => {\n      const textInputs = ['name', 'email', 'subject', 'message', 'validation']\n\n      let hasError\n      textInputs.forEach(input => {\n        if (!hasError && !formData[input]) {\n          hasError = true\n          setValidation({\n            ...defaultValidation,\n            [input]: true,\n          })\n        }\n      })\n\n      if (hasError) {\n        return\n      }\n\n      if (formData.validation !== '8') {\n        setValidation({\n          ...validation,\n          validation: true,\n        })\n        return\n      }\n\n      // reset validation\n      setValidation(defaultValidation)\n\n      onSubmit(formData)\n    },\n  })\n)(ContactForm)\n","class ContactException {\n  constructor(message) {\n    this.message = message\n    this.name = 'ContactException'\n  }\n}\n\nexport default ContactException\n","import { ContactException } from './exceptions'\nimport { env } from '../config'\n\nconst SAFE_LENGTH = 5000\n\nasync function sendContact(payload) {\n  const body = {\n    name: payload.name,\n    email: payload.email,\n    subject: payload.subject,\n    content: payload.message,\n  }\n\n  const isBigMessage =\n    Object.keys(body).filter(key => body[key].length > SAFE_LENGTH).length > 0\n\n  if (isBigMessage) {\n    throw new ContactException('contact.form.bigMessage')\n  }\n\n  // eslint-disable-next-line no-undef\n  const response = await fetch(`${env.apiService.url}api/messages`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(body),\n  })\n\n  const data = await response.json()\n\n  if (data.status_code) {\n    throw new ContactException(data.error_message || response.statusText)\n  }\n}\n\nexport default {\n  sendContact: sendContact.bind(this),\n}\n","import { contact } from '../api'\n\nexport const SEND_CONTACT_REQUEST = 'SEND_CONTACT_REQUEST'\nexport const SEND_CONTACT_SUCCESS = 'SEND_CONTACT_SUCCESS'\nexport const SEND_CONTACT_FAILURE = 'SEND_CONTACT_FAILURE'\nexport const RESET_CONTACT_FORM = 'RESET_CONTACT_FORM'\n\nexport function resetContactForm() {\n  return { type: RESET_CONTACT_FORM }\n}\n\nexport function sendContactForm(payload) {\n  return async dispatch => {\n    dispatch({ type: SEND_CONTACT_REQUEST })\n    try {\n      await contact.sendContact(payload)\n      dispatch({ type: SEND_CONTACT_SUCCESS, data: true })\n    } catch (error) {\n      dispatch({ type: SEND_CONTACT_FAILURE, error })\n    }\n  }\n}\n","import { addLocaleData } from 'react-intl'\nimport enLocaleData from 'react-intl/locale-data/en'\nimport ptBRLocaleData from 'react-intl/locale-data/pt'\n\nimport en from './lang-en'\nimport br from './lang-pt-BR'\n\naddLocaleData([...enLocaleData, ...ptBRLocaleData])\n\nexport default {\n  en: {\n    flag: 'gb',\n    locale: 'en',\n    messages: en,\n  },\n  'pt-BR': {\n    flag: 'br',\n    locale: 'pt-BR',\n    messages: br,\n  },\n}\n","export default {\n  'application.name': 'mersocarlin',\n  'application.copy': 'Hemerson Carlin. All rights reserved.',\n\n  'mersocarlin.title': 'Software Engineer',\n  'mersocarlin.email': 'mersocarlin@mersocarlin.com',\n  'mersocarlin.gravatarUrl':\n    'https://www.gravatar.com/avatar/9d345af079c0e2a554a586c6cad3c20c?s=250',\n\n  'menu.home': 'Home',\n  'menu.contact': 'Contact',\n\n  'contact.title': 'Contact',\n  'contact.feedback.header': 'Thanks for your contact!',\n  'contact.feedback.message1': 'Your message has been sent to me! ',\n  'contact.feedback.message2':\n    \"I appreciate your time to sending me this message. I'm looking forward to talking to you very soon.\",\n  'contact.feedback.message3': 'All the Best,',\n\n  'contact.form.errorHeader': 'Ooops! Something is wrong!',\n  'contact.form.errorMessage':\n    \"It looks like my server is down. Don't worry, it will be back in a minute. Meanwhile, what about you send an email to {email} ? I'm always happy to help ;)\",\n  'contact.form.bigMessage':\n    \"It looks like you are sending a very big message to me. In that case, would you mind sending an email to {email}? I'm always happy to help ;)\",\n  'contact.form.name.label': 'Name',\n  'contact.form.name.placeholder': 'Your name',\n  'contact.form.email.label': 'E-mail',\n  'contact.form.email.placeholder': 'user@domain.com',\n  'contact.form.subject.label': 'Subject',\n  'contact.form.subject.placeholder': 'Subject',\n  'contact.form.message.label': 'Message',\n  'contact.form.validation.label': '5 + 3?',\n  'contact.form.send': 'Send',\n}\n","export default {\n  'application.name': 'mersocarlin',\n  'application.copy': 'Hemerson Carlin. Todos os direitos reservados.',\n\n  'mersocarlin.title': 'Engenheiro de Software',\n  'mersocarlin.email': 'mersocarlin@mersocarlin.com',\n  'mersocarlin.gravatarUrl':\n    'https://www.gravatar.com/avatar/9d345af079c0e2a554a586c6cad3c20c?s=250',\n\n  'menu.home': 'Home',\n  'menu.contact': 'Contato',\n\n  'contact.title': 'Contato',\n  'contact.feedback.header': 'Obrigado pelo seu contato!',\n  'contact.feedback.message1': 'Mensagem enviada com sucesso! ',\n  'contact.feedback.message2': 'Entrarei em contato o mais rápido possível.',\n  'contact.feedback.message3': 'Atenciosamente,',\n\n  'contact.form.errorHeader': 'Ooops! Algo deu errado!',\n  'contact.form.errorMessage':\n    'Parece que meu servidor está fora do ar. Mas não se preocupe, ele deve estar voltar em instantes. Enquanto isso, qual tal você enviar um email para {email} ?',\n  'contact.form.bigMessage':\n    'Parece que você está tentando enviar uma mensagem muito extensa pra mim. Neste caso, você se importaria de enviar um email para {email} ?',\n  'contact.form.name.label': 'Nome',\n  'contact.form.name.placeholder': 'Seu nome',\n  'contact.form.email.label': 'E-mail',\n  'contact.form.email.placeholder': 'usuario@dominio.com',\n  'contact.form.subject.label': 'Assunto',\n  'contact.form.subject.placeholder': 'Assunto',\n  'contact.form.message.label': 'Mensagem',\n  'contact.form.validation.label': '5 + 3?',\n  'contact.form.send': 'Enviar',\n}\n","import locales from '../i18n'\n\nexport const UPDATE_LOCALE = 'UPDATE_LOCALE'\n\nexport function updateLocale(locale) {\n  return {\n    type: UPDATE_LOCALE,\n    data: { ...locales[locale] },\n  }\n}\n","// @flow\nimport React from 'react'\nimport { compose, withHandlers } from 'recompose'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\n\nimport { Icon, Menu } from '../components'\n\nimport { I18nActionCreators } from '../actions'\nimport { withIntl } from '../higher-order'\nimport type { i18nReducerT, IntlT } from '../types'\n\nimport './App.css'\n\ntype PropsT = {\n  children: React$Element<*>,\n  i18n: i18nReducerT,\n  intl: IntlT,\n  onLocaleChange: (locale: string) => void,\n}\n\nfunction App({ children, i18n, intl, onLocaleChange }: PropsT) {\n  return (\n    <div className=\"app-mersocarlin\">\n      <Menu locale={i18n.flag} onLocaleChange={onLocaleChange} />\n\n      <div className=\"page-mersocarlin\">{children}</div>\n\n      <div className=\"ui footer container\">\n        <Icon icon=\"copyright\" />\n        {moment().year()} {intl.formatMessage({ id: 'application.copy' })}\n      </div>\n    </div>\n  )\n}\n\nexport default compose(\n  withIntl,\n  connect(\n    state => ({\n      i18n: state.i18n,\n    }),\n    {\n      updateLocale: I18nActionCreators.updateLocale,\n    }\n  ),\n  withHandlers({\n    onLocaleChange: ({ updateLocale }) => locale => updateLocale(locale),\n  })\n)(App)\n","// @flow\nimport React, { Fragment } from 'react'\nimport { compose, lifecycle, withHandlers, withProps } from 'recompose'\nimport { connect } from 'react-redux'\nimport { Header } from 'semantic-ui-react'\n\nimport { env } from '../config'\nimport { ContactActionCreators } from '../actions'\nimport { ContactForm, ContactSent, Map, SocialList } from '../components'\nimport { withIntl } from '../higher-order'\nimport type { ContactT, IntlT, MapCenterT, SendContactReducerT } from '../types'\n\ntype PropsT = {\n  center: MapCenterT,\n  intl: IntlT,\n  onSubmit: (contact: ContactT) => void,\n  sendContact: SendContactReducerT,\n}\n\nconst Contact = ({ center, intl, onSubmit, sendContact }: PropsT) => {\n  return (\n    <Fragment>\n      <div className=\"ui text container\">\n        <div className=\"column\">\n          <Header as=\"h1\" style={{ marginBottom: '1em' }}>\n            {intl.formatMessage({ id: 'contact.title' })}\n          </Header>\n        </div>\n\n        {sendContact.contactSent ? (\n          <div style={{ margin: '5em 0' }}>\n            <ContactSent />\n          </div>\n        ) : (\n          <div className=\"column\" style={{ marginBottom: '2em' }}>\n            <ContactForm\n              error={sendContact.error}\n              isSubmiting={sendContact.isSubmiting}\n              onSubmit={onSubmit}\n            />\n          </div>\n        )}\n      </div>\n      <Map\n        center={center}\n        options={{ fullscreenControl: false, zoomControl: false }}\n      />\n\n      <div style={{ margin: '2em 0', textAlign: 'center' }}>\n        <SocialList />\n      </div>\n    </Fragment>\n  )\n}\n\nexport default compose(\n  withIntl,\n  connect(\n    state => ({\n      sendContact: state.sendContact,\n    }),\n    {\n      resetContactForm: ContactActionCreators.resetContactForm,\n      sendContactForm: ContactActionCreators.sendContactForm,\n    }\n  ),\n  withProps({\n    center: env.map.center,\n  }),\n  withHandlers({\n    onSubmit: ({ sendContactForm }) => payload => sendContactForm(payload),\n  }),\n  lifecycle({\n    componentWillUnmount() {\n      this.props.resetContactForm()\n    },\n  })\n)(Contact)\n","// @flow\nimport React from 'react'\n\nimport { Icon, Image, SocialList } from '../components'\nimport { withIntl } from '../higher-order'\nimport type { IntlT } from '../types'\n\nimport './Home.css'\n\ntype PropsT = {\n  intl: IntlT,\n}\n\nfunction Home({ intl }: PropsT) {\n  return (\n    <div className=\"page-home\">\n      <Image src={intl.formatMessage({ id: 'mersocarlin.gravatarUrl' })} />\n      <h1 className=\"myName\">\n        {intl.formatMessage({ id: 'application.name' })}\n      </h1>\n      <div className=\"rubberBand animated myTitle\">\n        <h2>\n          {intl.formatMessage({ id: 'mersocarlin.title' })}\n          <Icon icon=\"code\" />\n        </h2>\n      </div>\n\n      <SocialList />\n    </div>\n  )\n}\n\nexport default withIntl(Home)\n","// @flow\nimport React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nimport App from './App'\nimport Contact from './Contact'\nimport Home from './Home'\n\nexport default function Main() {\n  return (\n    <App>\n      <Switch>\n        <Route path=\"/contact\" component={Contact} />\n        <Route exact path=\"/\" component={Home} />\n\n        <Redirect to=\"/\" />\n      </Switch>\n    </App>\n  )\n}\n","// @flow\nimport React from 'react'\nimport { compose, lifecycle } from 'recompose'\nimport { connect, Provider } from 'react-redux'\nimport { ConnectedRouter } from 'react-router-redux'\n\nimport logPageView from '../analytics'\nimport IntlProvider from './IntlProvider'\nimport Main from './Main'\n\ntype PropsT = {\n  history: any,\n  store: any,\n}\n\nfunction Root({ history, store }: PropsT) {\n  return (\n    <Provider store={store}>\n      <IntlProvider>\n        <ConnectedRouter history={history}>\n          <Main />\n        </ConnectedRouter>\n      </IntlProvider>\n    </Provider>\n  )\n}\n\nconst getPathName = routing =>\n  routing.location ? routing.location.pathname : '/'\n\nexport default compose(\n  connect(state => ({\n    routing: state.routing,\n  })),\n  lifecycle({\n    componentDidMount() {\n      logPageView('/')\n    },\n    componentWillReceiveProps({ routing }) {\n      const currentLocation = getPathName(this.props.routing)\n      const nextLocation = getPathName(routing)\n\n      if (currentLocation !== nextLocation) {\n        logPageView(nextLocation)\n      }\n    },\n  })\n)(Root)\n","import locales from '../i18n'\nimport { I18nActionCreators } from '../actions'\n\nconst INITIAL_STATE = { ...locales.en }\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case I18nActionCreators.UPDATE_LOCALE:\n      if (!action.data.messages) {\n        return state\n      }\n\n      if (action.data.locale === state.locale) {\n        return state\n      }\n\n      return {\n        ...state,\n        ...action.data,\n      }\n    default:\n      return state\n  }\n}\n","import { ContactActionCreators } from '../actions'\n\nconst INITIAL_STATE = {\n  contactSent: false,\n  error: null,\n  isSubmiting: false,\n}\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ContactActionCreators.SEND_CONTACT_REQUEST:\n      return {\n        ...state,\n        contactSent: false,\n        error: null,\n        isSubmiting: true,\n      }\n    case ContactActionCreators.SEND_CONTACT_SUCCESS:\n      return {\n        ...state,\n        isSubmiting: false,\n        contactSent: action.data,\n      }\n    case ContactActionCreators.SEND_CONTACT_FAILURE:\n      return {\n        ...state,\n        isSubmiting: false,\n        error: action.error,\n      }\n    case ContactActionCreators.RESET_CONTACT_FORM:\n      return {\n        ...INITIAL_STATE,\n      }\n    default:\n      return state\n  }\n}\n","import { routerReducer as routing } from 'react-router-redux'\nimport { combineReducers } from 'redux'\n\nimport i18n from './i18n'\nimport sendContact from './send-contact'\n\nconst rootReducer = combineReducers({\n  i18n,\n  sendContact,\n  routing,\n})\n\nexport default rootReducer\n","import { routerMiddleware } from 'react-router-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport reducers from '../reducers'\n\nconst configureStore = (history, preloadedState = {}) => {\n  const composeEnhancers =\n    process.env.NODE_ENV === 'production'\n      ? compose\n      : window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n  const reactRouterMiddleware = routerMiddleware(history)\n  const middlewares = [reactRouterMiddleware, thunk]\n\n  const store = createStore(\n    reducers,\n    preloadedState,\n    composeEnhancers(applyMiddleware(...middlewares))\n  )\n\n  return store\n}\n\nexport default configureStore\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport createBrowserHistory from 'history/createBrowserHistory'\nimport createHashHistory from 'history/createHashHistory'\n\nimport Root from './containers/Root'\nimport configureStore from './store/configureStore'\nimport registerServiceWorker from './registerServiceWorker'\n\nimport 'animate.css/animate.css'\nimport 'semantic-ui-css/semantic.min.css'\n\nconst history = window.history.pushState\n  ? createBrowserHistory()\n  : createHashHistory()\nconst store = configureStore(history)\n\nReactDOM.render(\n  <Root history={history} store={store} />,\n  document.getElementById('root')\n)\n\nregisterServiceWorker()\n"],"sourceRoot":""}